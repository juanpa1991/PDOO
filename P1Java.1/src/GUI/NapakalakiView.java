/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;
import napakalaki.CombatResult;
import napakalaki.CultistPlayer;
import napakalaki.Napakalaki;
import napakalaki.Player;
import napakalaki.Monster;
import napakalaki.Treasure;

/**
 *
 * @author Juanki1
 */
public class NapakalakiView extends javax.swing.JFrame {

    private Napakalaki napakalakiModel;
    /**
     * Creates new form NapakalakiView
     */
    public NapakalakiView() {
        initComponents();
    }
    
    public void setNapakalaki(Napakalaki napakalaki){

        this.napakalakiModel=napakalaki;
        playerView1.setPlayer(napakalaki.getCurrentPlayer());
        monsterView1.setMonster(napakalaki.getCurrentMonster());
        NextTurn.setEnabled(false);
        InformacionGeneral.setText("");
        NSectarios.setText(Integer.toString(CultistPlayer.getTotalCultistPlayer()));
        repaint();
        
    }
    
    public ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
// Se recorren los tesoros que contiene el panel,
// almacenando en un vector aquellos que están seleccionados.
// Finalmente se devuelve dicho vector.
        TreasureView tv;
        ArrayList<Treasure> output = new ArrayList();
        for (Component c : aPanel.getComponents()) {
            tv = (TreasureView) c;
            if ( tv.isSelected() )
            output.add ( tv.getTreasure() );
            
        }
        
        return output;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Combat = new javax.swing.JButton();
        NextTurn = new javax.swing.JButton();
        BuyLevels = new javax.swing.JButton();
        MakeVisible = new javax.swing.JButton();
        DiscardTreasures = new javax.swing.JButton();
        InformacionJuego = new javax.swing.JLabel();
        playerView1 = new GUI.PlayerView();
        monsterView1 = new GUI.MonsterView();
        InformacionGeneral = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        NSectarios = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Combat.setText("Combat");
        Combat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CombatActionPerformed(evt);
            }
        });

        NextTurn.setText("Next Turn");
        NextTurn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NextTurnActionPerformed(evt);
            }
        });

        BuyLevels.setText("Buy Levels");
        BuyLevels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuyLevelsActionPerformed(evt);
            }
        });

        MakeVisible.setText("Make Visible");
        MakeVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MakeVisibleActionPerformed(evt);
            }
        });

        DiscardTreasures.setText("Discard Treasures");
        DiscardTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DiscardTreasuresActionPerformed(evt);
            }
        });

        InformacionJuego.setText("Informacion Juego");

        InformacionGeneral.setBackground(new java.awt.Color(153, 204, 255));
        InformacionGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InformacionGeneralActionPerformed(evt);
            }
        });

        jLabel1.setText("Número de Sectarios:");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(BuyLevels)
                    .add(MakeVisible, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(monsterView1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(DiscardTreasures)
                    .add(NextTurn)
                    .add(Combat)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel1)
                            .add(NSectarios, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 66, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(playerView1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(0, 0, Short.MAX_VALUE)
                .add(InformacionJuego, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 123, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(InformacionGeneral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1389, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(monsterView1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(37, 37, 37)
                        .add(jLabel1)
                        .add(18, 18, 18)
                        .add(NSectarios, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 143, Short.MAX_VALUE)
                        .add(DiscardTreasures)
                        .add(18, 18, 18)
                        .add(MakeVisible)
                        .add(18, 18, 18)
                        .add(BuyLevels)
                        .add(18, 18, 18)
                        .add(NextTurn)
                        .add(18, 18, 18)
                        .add(Combat)
                        .add(26, 26, 26))
                    .add(layout.createSequentialGroup()
                        .add(playerView1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(InformacionJuego)
                    .add(InformacionGeneral, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CombatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CombatActionPerformed
        CombatResult combat_rel = napakalakiModel.developCombat();
        switch (combat_rel){
            
            case winAndWinGame:
                
                InformacionGeneral.setText(" ¡Felicidades has ganado! ");
                DiscardTreasures.setEnabled(false);
                BuyLevels.setEnabled(false);
                MakeVisible.setEnabled(false);
                Combat.setEnabled(false);
                NextTurn.setEnabled(false);
                playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
                break;
                
            case win:
                
                InformacionGeneral.setText(" ¡Has ganado el combate! ");
                DiscardTreasures.setEnabled(true);
                MakeVisible.setEnabled(true);
                BuyLevels.setEnabled(false);
                Combat.setEnabled(false);
                NextTurn.setEnabled(true);
                playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
                break;
                
            case lose:
                
                InformacionGeneral.setText(" ¡Has perdido, aplícate el mal rollo! ");
                DiscardTreasures.setEnabled(true);
                MakeVisible.setEnabled(true);
                BuyLevels.setEnabled(false);
                Combat.setEnabled(false);
                NextTurn.setEnabled(true);
                playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
                break;
                
            case loseAndDie:
                
                InformacionGeneral.setText(" ¡Pierdes y estás muerto! ");
                playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
                DiscardTreasures.setEnabled(false);
                MakeVisible.setEnabled(false);
                BuyLevels.setEnabled(false);
                Combat.setEnabled(false);
                NextTurn.setEnabled(true);
                break;
                
            case loseAndConvert:
                
                InformacionGeneral.setText(" Has sacado un 6 en el dado, ¡Pierdes y te conviertes! ");
                playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
                DiscardTreasures.setEnabled(true);
                MakeVisible.setEnabled(true);
                BuyLevels.setEnabled(false);
                Combat.setEnabled(false);
                NextTurn.setEnabled(true);
                break;
                
            case loseAndEscape:
                
                InformacionGeneral.setText(" ¡Pierdes, pero consigues escapar! ");
                playerView1.setPlayer(napakalakiModel.getCurrentPlayer());
                DiscardTreasures.setEnabled(true);
                MakeVisible.setEnabled(true);
                BuyLevels.setEnabled(false);
                Combat.setEnabled(false);
                NextTurn.setEnabled(true);
                break;
               
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_CombatActionPerformed

    private void InformacionGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InformacionGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_InformacionGeneralActionPerformed

    private void MakeVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MakeVisibleActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (playerView1.getHiddenTreasuresPanel());
        napakalakiModel.makeTreasuresVisible(selHidden);
        playerView1.setPlayer (napakalakiModel.getCurrentPlayer());
    }//GEN-LAST:event_MakeVisibleActionPerformed

    private void DiscardTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DiscardTreasuresActionPerformed
        //DiscardTreasures.setEnabled(true); Ejemplo
        //Habilitar/deshabilitar botones en función de las reglas
        //Añadir tesoros específicos al Badstuff
        //Menu para mostrar el combatResult del combate
        //La carta de sectario
        ArrayList<Treasure> selHidden = getSelectedTreasures (playerView1.getHiddenTreasuresPanel());
        ArrayList<Treasure> selVisible = getSelectedTreasures (playerView1.getVisibleTreasuresPanel());
        napakalakiModel.discardHiddenTreasures(selHidden);
        napakalakiModel.discardVisibleTreasures(selVisible);
        playerView1.setPlayer (napakalakiModel.getCurrentPlayer());
        // TODO add your handling code here:
    }//GEN-LAST:event_DiscardTreasuresActionPerformed

    private void BuyLevelsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuyLevelsActionPerformed
        ArrayList<Treasure> selHidden = getSelectedTreasures (playerView1.getHiddenTreasuresPanel());
        ArrayList<Treasure> selVisible = getSelectedTreasures (playerView1.getVisibleTreasuresPanel());
        napakalakiModel.buyLevels(selVisible, selHidden);
        playerView1.setPlayer (napakalakiModel.getCurrentPlayer());// TODO add your handling code here:
    }//GEN-LAST:event_BuyLevelsActionPerformed

    private void NextTurnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NextTurnActionPerformed
        boolean turn;
        
        turn=napakalakiModel.nextTurn();
        if(turn==true){
            
            this.setNapakalaki(napakalakiModel);
            DiscardTreasures.setEnabled(true);
            MakeVisible.setEnabled(true);
            BuyLevels.setEnabled(true);
            Combat.setEnabled(true);// TODO add your handling code here:
            InformacionGeneral.setText(" ¡Puedes pasar de turno! ");
            
        }
        else{
            
            InformacionGeneral.setText(" ¡Tienes cosas pendientes por hacer! ");
            Combat.setEnabled(false);
            
        }
        
        
        
    }//GEN-LAST:event_NextTurnActionPerformed

    /**
     * @param args the command line arguments
     */
    public void showView() {
        this.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuyLevels;
    private javax.swing.JButton Combat;
    private javax.swing.JButton DiscardTreasures;
    private javax.swing.JTextField InformacionGeneral;
    private javax.swing.JLabel InformacionJuego;
    private javax.swing.JButton MakeVisible;
    private javax.swing.JLabel NSectarios;
    private javax.swing.JButton NextTurn;
    private javax.swing.JLabel jLabel1;
    private GUI.MonsterView monsterView1;
    private GUI.PlayerView playerView1;
    // End of variables declaration//GEN-END:variables
}
